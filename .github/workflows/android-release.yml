name: Build & Auto-Release Signed APKs (notes/mental/journal)

on:
  # Build only when a tag like v2.15.1 (or v123) is pushed, or run manually
  push:
    tags: [ 'v*' ]
  workflow_dispatch:

permissions:
  contents: write    # needed to create Releases
  actions: read

jobs:
  # 1) Build each flavor in parallel and upload their signed APKs as artifacts
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - flavor: notes
            flavorCap: Notes
          - flavor: mental
            flavorCap: Mental
          - flavor: journal
            flavorCap: Journal

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Recreate PKCS12 keystore from secret
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > "$HOME/embanaphe.p12"
          echo "ANDROID_KEYSTORE_PATH=$HOME/embanaphe.p12" >> "$GITHUB_ENV"

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      - name: Assemble ${{ matrix.flavor }}Release (signed)
        env:
          ANDROID_KEYSTORE_PATH: ${{ env.ANDROID_KEYSTORE_PATH }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_ALIAS_PASSWORD: ${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}
        run: ./gradlew assemble${{ matrix.flavorCap }}Release

      - name: Rename APKs for clarity
        run: |
          mkdir -p rename/${{ matrix.flavor }}
          SRC=$(ls app/build/outputs/apk/${{ matrix.flavor }}/release/*.apk | head -n 1)
          DEST=rename/${{ matrix.flavor }}/markor-${{ matrix.flavor }}.apk
          cp "$SRC" "$DEST"
          echo "Renamed $SRC â†’ $DEST"

      - name: Upload ${{ matrix.flavor }} signed APK
        uses: actions/upload-artifact@v4
        with:
          name: markor-${{ matrix.flavor }}-release-signed
          path: rename/${{ matrix.flavor }}/markor-${{ matrix.flavor }}.apk
          if-no-files-found: error

  # 2) After all flavors finish, create ONE Release and attach all APKs
  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download all built APK artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: List downloaded files (debug)
        run: find dist -type f -maxdepth 3 -print

      - name: Create GitHub Release and upload APKs
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}     # reuse the pushed tag (vX.Y.Z)
          name: "Upstream sync: ${{ github.ref_name }}"
          draft: false
          prerelease: false
          files: |
            dist/markor-notes-release-signed/markor-notes.apk
            dist/markor-mental-release-signed/markor-mental.apk
            dist/markor-journal-release-signed/markor-journal.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
