name: Build & Auto-Release Signed APKs (notes/mental/journal)

on:
  workflow_dispatch:        # allow manual runs
  push:
    branches: [ master ]    # build on pushes to master (optional; adjust if needed)
  schedule:
    - cron: "0 2 * * *"     # optional: nightly builds at 02:00 UTC

permissions:
  contents: write           # needed to create Releases with GITHUB_TOKEN
  actions: read

jobs:
  # 1) Build each flavor in parallel and upload their signed APKs as artifacts
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        flavor: [notes, mental, journal]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Recreate PKCS12 keystore from secret
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > $HOME/embanaphe.p12
          echo "ANDROID_KEYSTORE_PATH=$HOME/embanaphe.p12" >> $GITHUB_ENV

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      - name: Assemble ${{ matrix.flavor }}Release (signed)
        env:
          ANDROID_KEYSTORE_PATH: ${{ env.ANDROID_KEYSTORE_PATH }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_ALIAS_PASSWORD: ${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}
        run: ./gradlew assemble${{ matrix.flavor^ }}Release

      - name: Upload ${{ matrix.flavor }} signed APK
        uses: actions/upload-artifact@v4
        with:
          name: markor-${{ matrix.flavor }}-release-signed
          path: app/build/outputs/apk/${{ matrix.flavor }}/release/*.apk
          if-no-files-found: error

  # 2) After all flavors finish, create ONE Release and attach all APKs
  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download all built APK artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      # Optional: print what we got
      - name: List artifacts
        run: |
          echo "Downloaded files:"
          find dist -type f -maxdepth 3 -print

      # Choose a tag/version scheme:
      #   - v${{ github.run_number }}   (simple, always increasing)
      #   - Or date-based: v$(date +%Y%m%d%H%M)
      #   - Or parse app version from a file if you prefer
      - name: Set release tag and name
        id: meta
        run: |
          TAG="v${{ github.run_number }}"
          NAME="Automated build #${{ github.run_number }}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "name=$NAME" >> $GITHUB_OUTPUT

      - name: Create GitHub Release and upload APKs
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.meta.outputs.tag }}
          name: ${{ steps.meta.outputs.name }}
          draft: false
          prerelease: false
          files: |
            dist/markor-notes-release-signed/*.apk
            dist/markor-mental-release-signed/*.apk
            dist/markor-journal-release-signed/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
