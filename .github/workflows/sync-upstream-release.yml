name: Sync Upstream Release (tag only if new)

on:
  schedule:
    - cron: "0 2 * * *"   # daily 02:00 UTC check; adjust as you like
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check-and-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest upstream release tag
        id: upstream
        uses: actions/github-script@v7
        with:
          script: |
            const r = await github.rest.repos.getLatestRelease({
              owner: 'gsantner',
              repo: 'markor'
            });
            core.setOutput('tag', r.data.tag_name);

      - name: Checkout fork
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # we need tags & history
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add upstream remote & fetch tags
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote add upstream https://github.com/gsantner/markor.git || true
          git fetch upstream --tags

      - name: Skip if tag already exists in this fork
        id: present
        run: |
          TAG="${{ steps.upstream.outputs.tag }}"
          if git rev-parse -q --verify "refs/tags/$TAG" >/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Merge upstream and push new tag
        if: steps.present.outputs.exists == 'false'
        run: |
          TAG="${{ steps.upstream.outputs.tag }}"
          # merge latest upstream/master into our master (keeps your flavor/signing changes)
          git checkout master
          git merge --no-edit upstream/master || true
          git push origin master

          # create the upstream release tag in our fork and push it
          git tag "$TAG"
          git push origin "$TAG"
